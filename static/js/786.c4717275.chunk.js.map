{"version":3,"file":"static/js/786.c4717275.chunk.js","mappings":"uSASIA,GAAUC,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAChD,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAtB,EAAQC,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IADwB,QAAC,QAGvBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YACnCD,GALmB,IAMtBK,MAAOR,IAGZ,IACDJ,EAAQa,YAAc,U,gECsBtB,EAhCiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuCC,EAAAA,EAAAA,MAA/BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,UAMzB,OAJAC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,KAGF,UAAC,IAAD,CAAWQ,QAAS,EAAGC,UAAU,SAASC,SAAS,OAAnD,WACE,SAACxB,EAAD,UAAS,eACT,SAAC,IAAD,KACA,SAACA,EAAD,UAAS,aACRkB,IAAS,uBAAIA,EAAMO,UACnBN,IAAcD,IAAS,SAAC,KAAD,IACvBD,EAASS,OAAS,GACjB,UAAC,KAAD,CACEJ,QAAS,EACTK,OAAO,YACPC,YAAY,QACZC,aAAc,EAJhB,WAME,SAAC,KAAD,KACA,SAAC,KAAD,QAGF,uBAAG,yCAIV,C","sources":["../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","pages/Contacts.js"],"sourcesContent":["// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","import { Box, Container, Heading } from '@chakra-ui/react';\nimport { ContactForm, Loader, Filter, ContactList } from 'components';\n// import {\n//   Container,\n//   PhonebookTitle,\n//   ContactsTitle,\n// } from 'components/App/App.styled';\nimport { useContacts } from 'hooks';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { contacts, error, isLoading } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container padding={5} textAlign=\"center\" maxWidth=\"80ch\">\n      <Heading>Phonebook</Heading>\n      <ContactForm />\n      <Heading>Contacts</Heading>\n      {error && <p>{error.message}</p>}\n      {isLoading && !error && <Loader />}\n      {contacts.length > 0 ? (\n        <Box\n          padding={4}\n          border=\"1px solid\"\n          borderColor=\"black\"\n          borderRadius={8}\n        >\n          <Filter />\n          <ContactList />\n        </Box>\n      ) : (\n        <p>Add your contacts to the phonebook</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Heading","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","jsx","chakra","cx","__css","displayName","dispatch","useDispatch","useContacts","contacts","error","isLoading","useEffect","fetchContacts","padding","textAlign","maxWidth","message","length","border","borderColor","borderRadius"],"sourceRoot":""}